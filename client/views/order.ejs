<!-- order.ejs -->
<!DOCTYPE html>
<html lang="en">
  
  <head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta http-equiv="Content-Type" content="application/javascript">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <title>Order</title>
    <style>
        /* Styles for the order page */
        /* body {
            font-family: Arial, sans-serif;
            background-color: #f2f2f2;
        } */

        .order-container {
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
            background-color: #ffffff;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            animation: slideIn 0.5s ease-in-out;
        }

        h1 {
            font-size: 24px;
            margin-bottom: 20px;
            color: #333333;
            animation: fadeIn 0.5s ease-in-out;
        }

        .item-container {
            background-color: #f8f8f8;
            border: 1px solid #dddddd;
            padding: 10px;
            margin-bottom: 10px;
            border-radius: 4px;
            animation: slideIn 0.5s ease-in-out;
            display: flex;
            align-items: center;
        }

        .item-image {
            width: 80px;
            height: 80px;
            object-fit: cover;
            margin-right: 20px;
        }

        p {
            margin: 5px 0;
            color: #666666;
        }

        .empty-cart {
            margin-top: 20px;
            text-align: center;
            color: #999999;
            animation: fadeIn 0.5s ease-in-out;
        }

        /* Responsive styles */
        @media screen and (max-width: 600px) {
            h1 {
                font-size: 20px;
            }
        }

        /* Animations */
        @keyframes slideIn {
            0% {
                opacity: 0;
                transform: translateX(-10px);
            }

            100% {
                opacity: 1;
                transform: translateX(0);
            }
        }

        @keyframes fadeIn {
            0% {
                opacity: 0;
            }

            100% {
                opacity: 1;
            }
        }

        /* Bottom Nav */
        .bottom-bar {
            position: fixed;
            bottom: 0;
            width: 100%;
            height: 60px;
            background-color: #f2f2f2;
            display: flex;
            justify-content: space-around;
            align-items: center;
        }

        .bottom-bar a {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            color: #777;
            text-decoration: none;
            font-size: 12px;
        }

        .bottom-bar a.active {
            color: #11e493;
            background-color: #f2f2f2;
        }

        .bottom-bar a i {
            font-size: 24px;
        }

                /* Checkout button */
                .checkout-button {
            margin-top: 20px;
            text-align: center;
        }

        .checkout-button button {
            padding: 10px 20px;
            font-size: 16px;
            background-color: #11e493;
            color: #ffffff;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        .delete-btn {
            color: rgb(241, 235, 235);
            background-color: rgb(194, 35, 35);
            border: none;
            border-radius: 2px;
            font-size: 13px;
        }
        .delete-btn:hover {
            color: rgb(241, 236, 236);
            background-color: rgb(236, 15, 15);
        } 
    </style>
</head>

<body>
    <div class="order-container">
        <h1>Your Cart Items:</h1>
        <% cartItems.forEach(function(item) { %>
        <div class="item-container">
            <img src="<%= item.imageUrl %>" alt="<%= item.name %>" class="item-image">
            <div>
                <p>Item ID: <%= item.itemId %></p>
                <p>Name: <%= item.name %></p>
                <p>Price: <%= item.price %></p>
                <p>Quantity: <%= item.quantity %></p>
                <button class="delete-btn" data-item-id="<%= item.itemId %>">Delete</button>
            </div>
        </div>
        <% }) %>

        <% if (cartItems.length === 0) { %>
        <p class="empty-cart">Your cart is empty</p>
        <% } %>

        <div class="checkout-button">
          <button onclick="checkout()">Checkout</button>
        </div>
    </div>

    <div class="bottom-bar">
        <a href="/dashboard.html" class="active">
            <i class="fa fa-home"></i>
            Home
        </a>
        <a href="#">
            <i class="fa fa-info-circle"></i>
            About
        </a>
        <a href="/order" id="order-btn">
            <span class="notification" id="cart-count"></span>
            <i class="fa fa-shopping-cart"></i>
            Orders
        </a>
        <a href="/profile">
            <i class="fa fa-user"></i>
            Profile
        </a>
    </div>


    <script>
                        // Wait for the DOM content to load
                        document.addEventListener('DOMContentLoaded', () => {
                      // Add event listeners to the delete buttons
                      const deleteButtons = document.querySelectorAll('.delete-btn');
                      deleteButtons.forEach(button => {
                        button.addEventListener('click', deleteCartItem);
                      });
                    });
                

                    // Function to handle deleting a cart item
                    function deleteCartItem(event) {
                      const button = event.currentTarget;
                      const itemId = button.getAttribute('data-item-id');

                      console.log('Item ID:', itemId);

                      // Send a request to delete the item from the cart
                      fetch('/delete-from-cart', {
                        method: 'POST',
                        headers: {
                          'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ itemId }),
                      })
                        .then(response => response.json())
                        .then(data => {
                          console.log('Item deleted from cart:', data);
                          // Refresh the page or update the cart display if needed

                          if (data.success) {
                            // Remove the deleted item from the DOM
                            const itemContainer = button.closest('.item-container');
                            itemContainer.remove();
                          }
                        })
                        .catch(error => {
                          console.error('Error deleting item from cart:', error);
                          // Handle the error if needed
                        });
                    }

        </script>


    <script>

      function onLoadFunct(){
        // Update the checkout button click event handler
        document.getElementById('checkout-btn').addEventListener('click', function() {
          const cartItems = getCartItemsFromStorage(); // Implement the function to get cart items
          if (cartItems.length === 0) {
            alert('No items have been added to the cart.');
            return;
          }
          // Proceed with the checkout process
          // ...
        });
      }


        function checkout() {
            // Calculate the total price
            let totalPrice = 0;
            <% cartItems.forEach(function(item) { %>
            totalPrice += <%= item.price %> * <%= item.quantity %>;
            <% }) %>

            // Redirect to the payment page with the total price
            window.location.href = '/payment?totalPrice=' + totalPrice;
        }




                //         // Function to update the notification count on the order button
                // function updateNotificationCount(count) {
                //   const cartCountElement = document.getElementById('cart-count');
                //   cartCountElement.textContent = count.toString();
                // }

                // // Function to fetch the cart count from the server and update the notification count
                // function updateCartCount() {
                //   fetch('/cart-count')
                //     .then(response => response.json())
                //     .then(data => {
                //       updateNotificationCount(data.count);
                //     })
                //     .catch(error => {
                //       console.error('Error updating cart count:', error);
                //     });
                // }

                // // Call the updateCartCount function when the dashboard page loads
                // document.addEventListener('DOMContentLoaded', updateCartCount);



    </script>

</body>

</html>
